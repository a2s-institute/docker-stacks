name: Build and push images

env:
  OWNER: ${{ github.repository_owner }}

on:
  workflow_call:
    inputs:
      parent-image:
        description: Parent image name
        required: false
        type: string
        default: default
      parent-variant:
        description: Parent variant tag prefix
        required: false
        type: string
        default: default
      load-parent:
        description: Load parent image from GH artifact
        type: boolean
        required: false
        default: true
      image:
        description: Image name
        required: true
        type: string
      variant:
        description: Variant tag prefix
        required: false
        type: string
        default: default
      context:
        description: Path to Dockerfile location
        required: false
        type: string
        default: default
      registry:
        description: Registry
        required: false
        type: string
        default: quay.io
      push:
        description: Publish image to registry
        type: boolean
        required: false
        default: false
      runs-on:
        description: GitHub Actions Runner image
        required: true
        type: string

jobs:
  build-test-upload:
    runs-on: ${{ inputs.runs-on }}

    steps:
      - name: Print input variables
        run: |
          echo "=====Input variables======"
          echo "Parent Image: ${{ inputs.parent-image }}"
          echo "Parent Variant: ${{ inputs.parent-variant }}"
          echo "Image: ${{ inputs.image }}"
          echo "Variant: ${{ inputs.variant }}"
          echo "Context: ${{ inputs.context }}"
          echo "Registry: ${{ inputs.registry }}"
          echo "Push: ${{ inputs.push }}"
          echo "Runs-on: ${{ inputs.runs-on }}"
      # Image with CUDA needs extra disk space
      - name: Free disk space üßπ
        if: contains(inputs.variant, 'cuda')
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: false
          docker-images: false
          swap-storage: false

      - name: Checkout Repo ‚ö°Ô∏è
        uses: actions/checkout@v4

      # Self-hosted runners share a state (whole VM) between runs
      # Also, they might have running or stopped containers,
      # which are not cleaned up by `docker system prune`
      - name: Reset docker state and cleanup artifacts üóëÔ∏è
        run: |
          docker kill $(docker ps --quiet) || true
          docker rm $(docker ps --all --quiet) || true
          docker system prune --all --force
          rm -rf /tmp/a2s/
        shell: bash
      
      - name: Login to ghcr.io
        if: ${{ inputs.registry == 'ghcr.io' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.GH_USERNAME }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Login to Quay Container Registry
        if: ${{ inputs.registry == 'quay.io' }}
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_ROBOT_TOKEN }}

      - name: Check changes in the image directory
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            image_changed:
              ${{ inputs.image }}/${{ inputs.variant }}/**/!(README.md)
            base_changed:
              base-gpu-notebook/**/!(README.md)
            workflow_changed:
              .github/workflows/*.yml
          base: ${{ github.ref }}

      - name: Generate base image Dockerfile
        if: contains(inputs.image, 'base-gpu-notebook')
        run: | 
          # generate dockerfile
          cd base-gpu-notebook && bash generate_dockerfile.sh && cd ..

      - name: Build image üõ†
        if: |
          steps.changes.outputs.image_changed == 'true' ||
          steps.changes.outputs.base_changed == 'true' ||
          steps.changes.outputs.workflow_changed == 'true'
        id: build_image
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.context }} 
          push: ${{ inputs.push }}
          tags: ${{ inputs.registry }}/${{ env.OWNER }}/${{ inputs.image }}:${{ inputs.variant }}

